.tv {
  position: relative;
  background-color: #000;
  overflow: hidden;
  margin: 0 auto;
}

.tv-screen {
  animation: turn-on-transform 0.4s, turn-on-filter 1s;
}

.tv-effect {
  position: absolute;
  z-index: var(--layer-tv-effects);
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* colors */
.tv-effect.--static {
  background-size: cover;
  opacity: 0.1;
  background-image: url(/assets/images/effect-static.gif);

  @nest body:matches([channel='0'], :not([channel])) & {
    opacity: 0.2;
  }

  @nest html.webp & {
    background-image: url(/assets/images/effect-static.webp);
  }

  /* todo: animated avif not supported right now */
}

/* static/noise effect */
.tv-effect.--artifacts {
  background-image: url(/assets/images/effect-artifacts.gif);
  background-size: cover;
  opacity: 0.4;

  @nest html.webp & {
    background-image: url(/assets/images/effect-artifacts.webp);
  }

  /* todo: animated avif not supported right now */
}

/* vignette */
.tv-effect.--vignette {
  background: radial-gradient(circle, transparent 60%, black 100%), transparent;
}

/* remove some contrast from the webcam */
.tv-effect.--decontrast {
  background-color: #fff;
  opacity: 0.2;

  @nest body:not([camera]) & {
    display: none;
  }
}

/* horizontal lines + scan line*/
.tv-effect.--crt {
  &::before,
  &::after {
    content: '';
    display: block;
    position: absolute;
    z-index: var(--layer-tv-effects);
    top: 0;
    left: 0;
    width: 100%;
    pointer-events: none;
  }

  &::before {
    height: 90px;
    background: linear-gradient(
      180deg,
      transparent 0,
      #fffafa26 50%,
      transparent
    );
    animation: vline 8s linear infinite;
  }

  &::after {
    height: 100%;
    background-image: repeating-linear-gradient(
      transparent,
      transparent 6px,
      rgba(255, 255, 255, 0.03) 6px,
      rgba(255, 255, 255, 0.03) 12px
    );
  }
}

.tv-content {
  position: relative;
  z-index: var(--layer-content);
  overflow: hidden auto;
  background-color: rgba(0, 0, 0, 0.4);
}

.space {
  position: relative;
  background-color: #000;
  overflow: hidden;
}

.stars {
  position: absolute;
  top: 0;
  left: 0;
  transform-origin: 0 0;
  width: calc(2000px * 2);
  height: calc(1375px * 2);

  @media (min-width: 3840px) {
    width: calc(2000px * 4);
    height: calc(1375px * 4);
  }

  @nest body[space] & {
    animation: moving-stars 117s linear infinite;
    background-image: url(/assets/images/stars.jpg);

    @nest html.webp & {
      background-image: url(/assets/images/stars.webp);
    }

    @nest html.avif & {
      background-image: url(/assets/images/stars.avif);
    }
  }
}

.spaceship {
  @nest body[space='floating'] & {
    animation: float 6s ease-in-out infinite;
  }
}

.tv {
  --spaceIntro: 0.8s;
  --spaceOutroDelay: 0.2s;
  transform-origin: center 10%;
  transition: box-shadow 0.6s ease-out;

  @nest body[space] & {
    --scale: 0.6;
    --startTransform: scale(1) translateY(0);
    --endTransform: scale(var(--scale)) translateY(80px);
    animation-duration: var(--spaceIntro);
    animation-timing-function: cubic-bezier(0.72, 0.27, 0, 1);
    animation-fill-mode: both;

    @media (max-width: 900px) {
      --scale: 0.9;
      transition: box-shadow 0.6s ease-out, height var(--spaceIntro) ease;
      will-change: height, transform;
    }
  }

  @nest body:matches([space='floating'], [space='exiting']) & {
    box-shadow: 0px 0px 50px 1px rgba(255, 255, 255, 0.2);
  }

  @nest body:matches([space='entering'], [space='floating']) & {
    animation-name: go-to-space;

    @media (max-width: 900px) {
      height: calc(90vw / 16 * 10);
    }
  }

  @nest body[space='exiting'] & {
    transform: var(--endTransform);
    animation-name: exit-space;
    animation-delay: var(--spaceOutroDelay);

    @media (max-width: 900px) {
      transition-delay: var(--spaceOutroDelay);
    }
  }
}

body.loading-channel {
  & .tv-screen {
    filter: brightness(3) saturate(0.15) contrast(1.2);
  }

  & .tv-effect.--static {
    opacity: 0.4;
  }

  & .tv-effect.--artifacts {
    opacity: 0.7;
  }
}

body.loading-page {
  & .tv-screen {
    filter: brightness(3) grayscale(1) contrast(1.2);
  }

  & .tv-effect.--decontrast {
    display: block;
    opacity: 0.2;
  }

  & .tv-effect.--static {
    opacity: 0.3;
  }

  & .tv-effect.--artifacts {
    opacity: 0.8;
  }

  & .tv-effect.--crt {
    &::before {
      animation-duration: 0.25s;
    }
  }

  & .tv-content {
    filter: blur(5px);
    pointer-events: none;
  }
}
